plugins {
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '2.0.0'
    id 'org.javamodularity.moduleplugin' version '1.8.15'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'org.beryx.jlink' version '3.0.1'
    id 'org.jetbrains.kotlin.plugin.serialization' version "2.0.0"
}

group 'it.andreag'
version '1.0-SNAPSHOT'

layout.buildDirectory.set(file("C:/Users/gaspa/build/${rootProject.name}/${project.name}"))

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.0'
}


tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'it.andreag.whispercli'
    mainClass = 'it.andreag.whispercli.WhisperApplication'
}
kotlin {
    jvmToolchain(22)
}

javafx {
    version = '22-ea+11'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    implementation('org.controlsfx:controlsfx:11.1.2')
    implementation('org.kordamp.ikonli:ikonli-javafx:12.3.1')
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.9.0-RC")
    implementation('org.kordamp.ikonli:ikonli-materialdesign2-pack:12.3.1')
    implementation('org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.3')
    implementation('org.slf4j:slf4j-api:1.7.25')
    implementation('org.slf4j:slf4j-simple:1.7.25')
    implementation 'io.github.microutils:kotlin-logging-jvm:2.0.11'
    implementation('org.openjfx:javafx-media:23-ea+22')
    implementation('commons-codec:commons-codec:1.17.0')
    implementation("org.jetbrains.kotlinx:kotlinx-datetime:0.6.0")

    testImplementation('org.jetbrains.kotlin:kotlin-test')
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}